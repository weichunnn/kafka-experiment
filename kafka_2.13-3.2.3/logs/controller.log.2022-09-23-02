[2022-09-23 22:13:47,841] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-23 22:13:47,951] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-09-23 22:13:47,976] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-09-23 22:13:48,104] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-09-23 22:13:48,117] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-09-23 22:13:48,164] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-09-23 22:13:48,174] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-09-23 22:13:48,241] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 25) (kafka.controller.KafkaController)
[2022-09-23 22:13:48,256] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-09-23 22:13:48,293] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-09-23 22:13:48,357] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-09-23 22:13:48,407] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-09-23 22:13:48,412] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-09-23 22:13:48,414] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-09-23 22:13:48,415] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-09-23 22:13:48,427] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,428] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,428] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-09-23 22:13:48,429] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-09-23 22:13:48,430] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-09-23 22:13:48,472] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-09-23 22:13:48,486] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-23 22:13:48,495] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-23 22:13:48,496] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-09-23 22:13:48,497] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-09-23 22:13:48,499] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-09-23 22:13:48,499] INFO [RequestSendThread controllerId=1] Controller 1 connected to 192.168.1.102:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-23 22:13:48,557] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-09-23 22:13:48,565] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-09-23 22:13:48,613] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,624] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,627] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,628] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-09-23 22:13:48,629] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-09-23 22:13:48,690] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-09-23 22:13:50,957] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-09-23 22:13:50,957] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-09-23 22:13:50,966] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-09-23 22:13:50,971] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-09-23 22:13:50,976] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-09-23 22:13:50,977] INFO [RequestSendThread controllerId=1] Controller 1 connected to 192.168.1.102:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-23 22:13:50,981] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 25, 2 -> 45) (kafka.controller.KafkaController)
[2022-09-23 22:13:53,696] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:13:53,698] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:13:58,221] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-09-23 22:13:58,221] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-09-23 22:13:58,242] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-09-23 22:13:58,243] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-09-23 22:13:58,257] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-09-23 22:13:58,261] INFO [RequestSendThread controllerId=1] Controller 1 connected to 192.168.1.102:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-23 22:13:58,266] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 25, 2 -> 45, 3 -> 61) (kafka.controller.KafkaController)
[2022-09-23 22:17:15,170] INFO [Controller id=1] New topics: [Set(example-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(example-topic,Some(j9WNZz7HQ3y_blu69j4ybA),Map(example-topic-0 -> ReplicaAssignment(replicas=1,3, addingReplicas=, removingReplicas=), example-topic-1 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=), example-topic-2 -> ReplicaAssignment(replicas=3,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-09-23 22:17:15,171] INFO [Controller id=1] New partition creation callback for example-topic-0,example-topic-1,example-topic-2 (kafka.controller.KafkaController)
[2022-09-23 22:18:53,706] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:18:53,707] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:18:53,713] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-09-23 22:18:53,717] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:18:53,718] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-09-23 22:18:53,718] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:18:53,718] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-09-23 22:18:53,718] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:19:01,380] DEBUG [Controller id=1] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-09-23 22:19:01,407] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=3, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2022-09-23 22:19:26,429] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(DTZG5HOaSs29EnzmCaAlVw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-09-23 22:19:26,429] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-09-23 22:23:53,719] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:23:53,724] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:23:53,748] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:23:53,748] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:23:53,748] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:23:53,749] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:23:53,749] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:23:53,749] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:28:53,757] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:28:53,764] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:28:53,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:28:53,779] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:28:53,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:28:53,780] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:28:53,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:28:53,780] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:33:53,774] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:33:53,778] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:33:53,786] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:38:53,782] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:38:53,784] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:38:53,803] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:38:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:38:53,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:38:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:38:53,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:38:53,804] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:43:53,805] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-23 22:43:53,807] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-23 22:43:53,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:43:53,828] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:43:53,829] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:43:53,829] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-09-23 22:43:53,829] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-09-23 22:43:53,829] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
